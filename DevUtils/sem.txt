prog		:	cdecl prog
				{ $$ = setputn("prog", 2, $1, $2); }
			|	cdefn prog
				{ $$ = setputn("prog", 2, $1, $2); }
			|	%empty
				{ $$ = setputn("prog", 0); }
			;
cdecl		:	_STRUCT IDENTIFIER ';'
				{ $$ = setputn("cdecl", 3, $1, $2, $3); }
			|	type IDENTIFIER '(' args ')' ';'
				{ $$ = setputn("cdecl", 6, $1, $2, $3, $4, $5, $6); }
			;
cdefn		:	_STRUCT IDENTIFIER '{' field_defn '}' ';'
				{ $$ = setputn("cdefn", 6, $1, $2, $3, $4, $5, $6); }
			|	type IDENTIFIER '(' args ')' body
				{ $$ = setputn("cdefn", 6, $1, $2, $3, $4, $5, $6); }
			|	_TYPEDEF type IDENTIFIER ';'
				{ $$ = setputn("cdefn", 4, $1, $2, $3, $4); }
			;
args		:	type IDENTIFIER rght_args
				{ $$ = setputn("args", 3, $1, $2, $3); }
			|	%empty
				{ $$ = setputn("args", 0); }
			;
rght_args	:	',' type IDENTIFIER
				{ $$ = setputn("rght_args", 3, $1, $2, $3); }
			|	%empty
				{ $$ = setputn("rght_args", 0); }
			;
field_defn	:	type IDENTIFIER decl_assign ';' field_defn
				{ $$ = setputn("field_defn", 5, $1, $2, $3, $4, $5); }
			|	%empty
				{ $$ = setputn("field_defn", 0); }
			;
type		:	_INT
				{ $$ = setputn("type", 1, $1); }
			|	_BOOL
				{ $$ = setputn("type", 1, $1); }
			|	_STRING
				{ $$ = setputn("type", 1, $1); }
			|	_CHAR
				{ $$ = setputn("type", 1, $1); }
			|	_VOID
				{ $$ = setputn("type", 1, $1); }
			|	type '*'
				{ $$ = setputn("type", 2, $1, $2); }
			|	type '[' ']'
				{ $$ = setputn("type", 3, $1, $2, $3); }
			|	_STRUCT IDENTIFIER
				{ $$ = setputn("type", 2, $1, $2); }
			|	IDENTIFIER
				{ $$ = setputn("type", 1, $1); }
			;
decl_assign	:	'=' expr decl_assign
				{ $$ = setputn("decl_assign", 3, $1, $2, $3); }
			|	%empty
				{ $$ = setputn("decl_assign", 0); }
			;
body		:	'{' stmts '}'
				{ $$ = setputn("body", 3, $1, $2, $3); }
			;
stmts		:	stmt stmts
				{ $$ = setputn("stmts", 2, $1, $2); }
			|	%empty
				{ $$ = setputn("stmts", 0); }
			;
stmt		:	simple ';'
				{ $$ = setputn("stmt", 2, $1, $2); }
			|	_RETURN null_expr ';'
				{ $$ = setputn("stmt", 3, $1, $2, $3); }
			|	_IF '(' expr ')' body else_stmt
				{ $$ = setputn("stmt", 6, $1, $2, $3, $4, $5, $6); }
			|	_WHILE '(' expr ')' body
				{ $$ = setputn("stmt", 5, $1, $2, $3, $4, $5); }
			|	_FOR '(' null_simple ';' expr ';' null_simple ')' body
				{ $$ = setputn("stmt", 9, $1, $2, $3, $4, $5, $6, $7, $8, $9); }
			|	body
				{ $$ = setputn("stmt", 1, $1); }
			|	_ASSERT '(' expr ')' ';'
				{ $$ = setputn("stmt", 5, $1, $2, $3, $4, $5); }
			|	_ERROR '(' expr ')' ';'
				{ $$ = setputn("stmt", 5, $1, $2, $3, $4, $5); }
			;
else_stmt	:	_ELSE body
				{ $$ = setputn("else_stmt", 2, $1, $2); }
			|	%empty
				{ $$ = setputn("else_stmt", 0); }
			;
simple		:	lftval asn_op expr
				{ $$ = setputn("simple", 3, $1, $2, $3); }
			|	lftval INC_OP
				{ $$ = setputn("simple", 2, $1, $2); }
			|	lftval DEC_OP
				{ $$ = setputn("simple", 2, $1, $2); }
			|	expr
				{ $$ = setputn("simple", 1, $1); }
			|	type IDENTIFIER decl_assign
				{ $$ = setputn("simple", 3, $1, $2, $3); }
			;
null_simple	:	simple
				{ $$ = setputn("null_simple", 1, $1); }
			|	%empty
				{ $$ = setputn("null_simple", 0); }
			;
lftval		:	IDENTIFIER
				{ $$ = setputn("lftval", 1, $1); }
			|	lftval '.' IDENTIFIER
				{ $$ = setputn("lftval", 3, $1, $2, $3); }
			|	lftval PTR_OP IDENTIFIER
				{ $$ = setputn("lftval", 3, $1, $2, $3); }
			|	'*' lftval
				{ $$ = setputn("lftval", 2, $1, $2); }
			|	lftval '[' expr ']'
				{ $$ = setputn("lftval", 4, $1, $2, $3, $4); }
			|	'(' lftval ')'
				{ $$ = setputn("lftval", 3, $1, $2, $3); }
			;
expr		:	'(' expr ')'
				{ $$ = setputn("expr", 3, $1, $2, $3); }
			|	number
				{ $$ = setputn("expr", 1, $1); }
			|	STRING_LITERAL
				{ $$ = setputn("expr", 1, $1); }
			|	CHAR_LITERAL
				{ $$ = setputn("expr", 1, $1); }
			|	_TRUE
				{ $$ = setputn("expr", 1, $1); }
			|	_FALSE
				{ $$ = setputn("expr", 1, $1); }
			|	_NULL
				{ $$ = setputn("expr", 1, $1); }
			|	IDENTIFIER
				{ $$ = setputn("expr", 1, $1); }
			|	expr bin_op expr
				{ $$ = setputn("expr", 3, $1, $2, $3); }
			|	un_op expr
				{ $$ = setputn("expr", 2, $1, $2); }
			|	expr '?' expr ':' expr
				{ $$ = setputn("expr", 5, $1, $2, $3, $4, $5); }
			|	IDENTIFIER '(' params ')'
				{ $$ = setputn("expr", 4, $1, $2, $3, $4); }
			|	expr '.' IDENTIFIER
				{ $$ = setputn("expr", 3, $1, $2, $3); }
			|	expr PTR_OP IDENTIFIER
				{ $$ = setputn("expr", 3, $1, $2, $3); }
			|	expr '[' expr ']'
				{ $$ = setputn("expr", 4, $1, $2, $3, $4); }
			|	_ALLOC '(' type ')'
				{ $$ = setputn("expr", 4, $1, $2, $3, $4); }
			|	_ALLOC_ARRAY '(' type ',' expr ')'
				{ $$ = setputn("expr", 6, $1, $2, $3, $4, $5, $6); }
			;
null_expr	:	expr
				{ $$ = setputn("null_expr", 1, $1); }
			|	%empty
				{ $$ = setputn("null_expr", 0); }
			;
params		:	expr rght_params
				{ $$ = setputn("params", 2, $1, $2); }
			|	%empty
				{ $$ = setputn("params", 0); }
			;
rght_params	:	',' expr
				{ $$ = setputn("rght_params", 2, $1, $2); }
			|	%empty
				{ $$ = setputn("rght_params", 0); }
			;
un_op		:	'!'
				{ $$ = setputn("un_op", 1, $1); }
			|	'~'
				{ $$ = setputn("un_op", 1, $1); }
			|	'-'
				{ $$ = setputn("un_op", 1, $1); }
			;
bin_op		:	'<'
				{ $$ = setputn("bin_op", 1, $1); }
			|	LE_OP
				{ $$ = setputn("bin_op", 1, $1); }
			|	EQ_OP
				{ $$ = setputn("bin_op", 1, $1); }
			|	GE_OP
				{ $$ = setputn("bin_op", 1, $1); }
			|	'>'
				{ $$ = setputn("bin_op", 1, $1); }
			|	'*'
				{ $$ = setputn("bin_op", 1, $1); }
			|	'/'
				{ $$ = setputn("bin_op", 1, $1); }
			|	'%'
				{ $$ = setputn("bin_op", 1, $1); }
			|	'+'
				{ $$ = setputn("bin_op", 1, $1); }
			|	'-'
				{ $$ = setputn("bin_op", 1, $1); }
			;
asn_op		:	'='
				{ $$ = setputn("asn_op", 1, $1); }
			|	MUL_ASSIGN
				{ $$ = setputn("asn_op", 1, $1); }
			|	DIV_ASSIGN
				{ $$ = setputn("asn_op", 1, $1); }
			|	MOD_ASSIGN
				{ $$ = setputn("asn_op", 1, $1); }
			|	ADD_ASSIGN
				{ $$ = setputn("asn_op", 1, $1); }
			|	SUB_ASSIGN
				{ $$ = setputn("asn_op", 1, $1); }
			|	LEFT_ASSIGN
				{ $$ = setputn("asn_op", 1, $1); }
			|	RIGHT_ASSIGN
				{ $$ = setputn("asn_op", 1, $1); }
			|	AND_ASSIGN
				{ $$ = setputn("asn_op", 1, $1); }
			|	XOR_ASSIGN
				{ $$ = setputn("asn_op", 1, $1); }
			|	OR_ASSIGN
				{ $$ = setputn("asn_op", 1, $1); }
			;
number		:	INTEGER
				{ $$ = setputn("number", 1, $1); }
			|	FLOAT
				{ $$ = setputn("number", 1, $1); }
			;
